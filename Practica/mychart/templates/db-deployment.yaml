apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.k8s.io: {{ .Values.posgre.deploy.name }}
  name: {{ .Values.posgre.deploy.name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.k8s.io: {{ .Values.posgre.deploy.name }}   
  strategy:
    type: {{ .Values.strategy }}
  template:
    metadata:
      labels:
        app.k8s.io: {{ .Values.posgre.deploy.name }}
    spec:
      containers:
      - name: {{ .Values.posgre.deploy.name }}
        image: "{{ .Values.image.repo }}:{{ .Values.image.dbtag }}"
        ports:
        - containerPort: {{ .Values.posgre.deploy.port }}
          protocol: {{ .Values.protocol }}
        # Variables de entorno para configura la base de datos  
        env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                key: psqhost
                name: db-cred
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                key: psqdbname
                name: db-cred
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                key: psqpass
                name: db-cred
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                key: psqport
                name: db-cred
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key: psquser
                name: db-cred
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                key: psqdb
                name: db-cred
        # Montar un volumen persistente      
        volumeMounts:
        - mountPath: {{ .Values.posgre.volumen.path }}
          name: {{ .Values.posgre.volumen.name }}
      restartPolicy: Always
      # Necesario para extraer la imagen
      imagePullSecrets:
        - name: docker-secret
      volumes:
        - name: {{ .Values.posgre.volumen.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.posgre.volumen.name }}